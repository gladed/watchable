$dokka.format:gfm
$dokka.linkExtension:md
$dokka.location:io.gladed.watchable$batch(kotlinx.coroutines.CoroutineScope, io.gladed.watchable.Watchable((io.gladed.watchable.batch.C)), kotlin.Long, kotlin.coroutines.SuspendFunction1((kotlin.collections.List((io.gladed.watchable.batch.C)), kotlin.Unit)))io.gladed.watchable/kotlinx.coroutines.-coroutine-scope/batch.md
$dokka.location:io.gladed.watchable$bind(kotlinx.coroutines.CoroutineScope, io.gladed.watchable.MutableWatchable((io.gladed.watchable.bind.M, io.gladed.watchable.bind.C)), io.gladed.watchable.Watchable((io.gladed.watchable.bind.C)))io.gladed.watchable/kotlinx.coroutines.-coroutine-scope/bind.md
$dokka.location:io.gladed.watchable$bind(kotlinx.coroutines.CoroutineScope, io.gladed.watchable.MutableWatchable((io.gladed.watchable.bind.M, io.gladed.watchable.bind.C)), io.gladed.watchable.Watchable((io.gladed.watchable.bind.C2)), kotlin.Long, kotlin.Function2((io.gladed.watchable.bind.M, io.gladed.watchable.bind.C2, kotlin.Unit)))io.gladed.watchable/kotlinx.coroutines.-coroutine-scope/bind.md
$dokka.location:io.gladed.watchable$simple(kotlinx.coroutines.CoroutineScope, io.gladed.watchable.SimpleWatchable((io.gladed.watchable.simple.S, io.gladed.watchable.simple.C)), kotlin.Long, kotlin.coroutines.SuspendFunction1((io.gladed.watchable.simple.S, kotlin.Unit)))io.gladed.watchable/kotlinx.coroutines.-coroutine-scope/simple.md
$dokka.location:io.gladed.watchable$toWatchableList(kotlin.collections.Iterable((io.gladed.watchable.toWatchableList.T)))io.gladed.watchable/kotlin.collections.-iterable/to-watchable-list.md
$dokka.location:io.gladed.watchable$toWatchableMap(kotlin.collections.Map((io.gladed.watchable.toWatchableMap.K, io.gladed.watchable.toWatchableMap.V)))io.gladed.watchable/kotlin.collections.-map/to-watchable-map.md
$dokka.location:io.gladed.watchable$toWatchableSet(kotlin.collections.Iterable((io.gladed.watchable.toWatchableSet.T)))io.gladed.watchable/kotlin.collections.-iterable/to-watchable-set.md
$dokka.location:io.gladed.watchable$twoWayBind(kotlinx.coroutines.CoroutineScope, io.gladed.watchable.MutableWatchable((io.gladed.watchable.twoWayBind.M, io.gladed.watchable.twoWayBind.C)), io.gladed.watchable.MutableWatchable((io.gladed.watchable.twoWayBind.M, io.gladed.watchable.twoWayBind.C)))io.gladed.watchable/kotlinx.coroutines.-coroutine-scope/two-way-bind.md
$dokka.location:io.gladed.watchable$twoWayBind(kotlinx.coroutines.CoroutineScope, io.gladed.watchable.MutableWatchable((io.gladed.watchable.twoWayBind.M, io.gladed.watchable.twoWayBind.C)), io.gladed.watchable.MutableWatchable((io.gladed.watchable.twoWayBind.M2, io.gladed.watchable.twoWayBind.C2)), kotlin.Function2((io.gladed.watchable.twoWayBind.M, io.gladed.watchable.twoWayBind.C2, kotlin.Unit)), kotlin.Function2((io.gladed.watchable.twoWayBind.M2, io.gladed.watchable.twoWayBind.C, kotlin.Unit)))io.gladed.watchable/kotlinx.coroutines.-coroutine-scope/two-way-bind.md
$dokka.location:io.gladed.watchable$waitFor(kotlinx.coroutines.CoroutineScope, io.gladed.watchable.waitFor.W, kotlin.Function1((io.gladed.watchable.waitFor.W, kotlin.Boolean)))io.gladed.watchable/kotlinx.coroutines.-coroutine-scope/wait-for.md
$dokka.location:io.gladed.watchable$watch(kotlinx.coroutines.CoroutineScope, io.gladed.watchable.Watchable((io.gladed.watchable.watch.C)), kotlin.Long, kotlin.coroutines.SuspendFunction1((io.gladed.watchable.watch.C, kotlin.Unit)))io.gladed.watchable/kotlinx.coroutines.-coroutine-scope/watch.md
$dokka.location:io.gladed.watchable.store$bind(kotlinx.coroutines.CoroutineScope, io.gladed.watchable.store.Store((io.gladed.watchable.store.bind.T)), io.gladed.watchable.WatchableMap((kotlin.String, io.gladed.watchable.store.bind.T)), kotlin.Long)io.gladed.watchable.store/kotlinx.coroutines.-coroutine-scope/bind.md
$dokka.location:io.gladed.watchable.store$create(kotlinx.coroutines.CoroutineScope, io.gladed.watchable.store.HoldingStore((io.gladed.watchable.store.create.T)))io.gladed.watchable.store/kotlinx.coroutines.-coroutine-scope/create.md
$dokka.location:io.gladed.watchable.store$holding(kotlinx.coroutines.CoroutineScope, io.gladed.watchable.store.Store((io.gladed.watchable.store.holding.T)), kotlin.Long, kotlin.coroutines.SuspendFunction2((io.gladed.watchable.store.HoldBuilder, io.gladed.watchable.store.holding.T, kotlin.Unit)))io.gladed.watchable.store/kotlinx.coroutines.-coroutine-scope/holding.md
io.gladed.watchable
io.gladed.watchable.store
io.gladed.watchable.util
