buildscript {
    ext.kotlin_version = '1.4.10'
    repositories {
        jcenter()
    }
}

plugins {
    id 'org.jetbrains.kotlin.multiplatform'
    id 'org.jetbrains.kotlin.plugin.serialization' version "$kotlin_version"
}

repositories {
    jcenter()
    maven { url "https://dl.bintray.com/kotlin/ktor" }
    mavenCentral()
}

def ktor_version = '1.3.2'
def logback_version = '1.2.3'

kotlin {
    jvm {
        withJava()
        compilations.all {
            kotlinOptions {
                freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
            }
        }
    }
    sourceSets {
        commonMain {
            dependencies {
                implementation rootProject  // Local version, otherwise use: compile "io.gladed:watchable:x.x.x"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.0.0"
            }
        }
        commonTest {
            dependencies {
                implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.0'
            }
        }
        jvmMain {
            dependencies {
                implementation kotlin('stdlib-jdk8')
                implementation "io.ktor:ktor-server-netty:$ktor_version"
                implementation "io.ktor:ktor-html-builder:$ktor_version"
                implementation "ch.qos.logback:logback-classic:$logback_version"
                implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
            }
        }
        jvmTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
                implementation "io.ktor:ktor-server-test-host:$ktor_version"
            }
        }
    }
}

task run(type: JavaExec, dependsOn: [jvmMainClasses]) {
    main = "MainKt"
    classpath { [
            kotlin.targets.jvm.compilations.main.output.allOutputs.files,
            configurations.jvmRuntimeClasspath,
    ] }
    args = []
}
