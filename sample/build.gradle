buildscript {
    ext.kotlin_version = '1.3.31'
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
    }
}

plugins {
    id 'kotlin-multiplatform'
}
apply plugin: 'kotlinx-serialization'

repositories {
    jcenter()
    maven { url "https://dl.bintray.com/kotlin/ktor" }
    mavenCentral()
}

def ktor_version = '1.1.3'
def logback_version = '1.2.3'
def kotlin_serialization_version = '0.11.0'

kotlin {
    jvm() {
        compilations.all {
            kotlinOptions {
                freeCompilerArgs += ["-Xuse-experimental=kotlin.Experimental"]
            }
        }
    }
    sourceSets {
        jvmMain {
            dependencies {
                implementation rootProject  // Local version, otherwise use: compile "io.gladed:watchable:x.x.x"
                implementation kotlin('stdlib-jdk8')
                implementation "io.ktor:ktor-server-netty:$ktor_version"
                implementation "io.ktor:ktor-html-builder:$ktor_version"
                implementation "ch.qos.logback:logback-classic:$logback_version"
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$kotlin_serialization_version"
            }
        }
        jvmTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
                implementation "io.ktor:ktor-server-test-host:$ktor_version"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlin_coroutines_version"
            }
        }
    }
}

task run(type: JavaExec, dependsOn: [jvmMainClasses]) {
    main = "MainKt"
    classpath { [
            kotlin.targets.jvm.compilations.main.output.allOutputs.files,
            configurations.jvmRuntimeClasspath,
    ] }
    args = []
}
